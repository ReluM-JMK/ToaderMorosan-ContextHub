{"version":3,"sources":["Components/Heading.js","GraphQL/Queries.js","GraphQL/Mutations.js","Components/BrandList.js","Components/Home.js","Components/AddBrand.js","Components/EditBrand.js","App.js","reportWebVitals.js","index.js"],"names":["Heading","Navbar","color","dark","Container","NavbarBrand","href","Nav","NavItem","className","to","LOAD_BRANDS","gql","ADD_BRAND","EDIT_BRAND","REMOVE_BRAND","BrandList","useQuery","error","data","loading","useMutation","removeBrand","useState","brands","setBrands","currentID","setID","useEffect","console","log","queryBrand","ListGroup","map","val","ListGroupItem","src","website_url","alt","name","id","Button","onClick","variables","Home","AddBrand","setName","website","setWebsite","addNewBrand","Form","FormGroup","Label","Input","type","placeholder","onChange","e","target","value","EditBrand","props","currentId","match","params","editBrand","errorLink","onError","graphqlErrors","networkError","message","location","path","alert","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","App","ApolloProvider","style","maxWidth","margin","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0828ba94.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n    Navbar,\r\n    Nav,\r\n    NavItem,\r\n    NavbarBrand,\r\n    Container\r\n} from 'reactstrap';\r\n\r\n\r\nexport const Heading = () => {\r\n    return (\r\n        <Navbar color=\"dark\" dark>  \r\n            <Container>\r\n                <NavbarBrand href=\"/\">Brands</NavbarBrand>\r\n                <Nav>\r\n                    <NavItem>\r\n                        <Link className=\"btn btn-primary\" to=\"/addBrand\"> Add Brand</Link>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Container>\r\n\r\n        </Navbar>\r\n    )\r\n}\r\n","import {gql} from \"@apollo/client\";\r\n\r\nexport const LOAD_BRANDS = gql `\r\nquery{\r\n  queryBrand{\r\n    name,\r\n    id,\r\n    website_url\r\n  }\r\n}\r\n`","import {gql} from \"@apollo/client\";\r\n\r\nexport const ADD_BRAND = gql `\r\nmutation addBrand(\r\n    $name: String!\r\n    $website_url: String!\r\n) {\r\n  addBrand(input: {\r\n    name: $name,\r\n    website_url: $website_url,\r\n  }){\r\n    id : numUids\r\n  }\r\n}\r\n`\r\n\r\n\r\nexport const EDIT_BRAND = gql `\r\nmutation updateBrand(\r\n    $name: String!\r\n    $website_url: String!\r\n    $id: [ID!]\r\n) {\r\n  updateBrand(input: {\r\n    filter: {\r\n      id: $id\r\n    },\r\n    set: {\r\n      name: $name,\r\n      website_url: $website_url,\r\n    }\r\n  }){\r\n    id : numUids\r\n  }\r\n}\r\n`\r\n\r\nexport const REMOVE_BRAND = gql `\r\nmutation deleteBrand(\r\n    $id: [ID!]\r\n) {\r\n  deleteBrand(filter: {\r\n    id: $id\r\n  }){\r\n    id : numUids\r\n  }\r\n}\r\n`\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link} from 'react-router-dom';\r\nimport{\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Button\r\n} from 'reactstrap';\r\nimport{useQuery, gql} from \"@apollo/client\";\r\nimport {LOAD_BRANDS} from \"../GraphQL/Queries\";\r\nimport {useMutation} from '@apollo/client';\r\nimport {REMOVE_BRAND } from \"../GraphQL/Mutations\";\r\nexport const BrandList = () => {\r\n\r\n    const { error, loading,data} = useQuery(LOAD_BRANDS);\r\n    const [removeBrand] = useMutation(REMOVE_BRAND);\r\n    const [brands,setBrands] = useState([]);\r\n    const [currentID,setID] = useState(\"\");\r\n    const link = \"https://www.google.com/s2/favicons?domain_url=\"\r\n\r\n\r\n    useEffect(() => {\r\n        if(data) {\r\n            console.log(data.queryBrand);\r\n            setBrands(data.queryBrand);\r\n        }\r\n        \r\n    }, [data]);\r\n\r\n\r\n    \r\n    const deleteBrand = () =>{\r\n            removeBrand({\r\n                variables:{\r\n                    id: currentID\r\n                }\r\n            })\r\n    }\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    \r\n\r\n    \r\n    return (\r\n        <ListGroup className=\"mt-4\">\r\n           \r\n            {brands.map((val) => {\r\n                return (\r\n             <ListGroupItem className=\"d-flex justify-content-between\">\r\n            <img src={link+val.website_url} alt=\"\" />\r\n            <strong>{val.name}</strong>\r\n            <strong>{val.website_url}</strong>\r\n            <div className=\"ml-auto\">\r\n                <Link to={`/edit/${val.id}`}  className=\"btn btn-warning ml-2\" >Edit</Link>\r\n                <Button color=\"danger\"  onClick={() => {\r\n                    setID(val.id);\r\n                    deleteBrand(); \r\n                } }>Delete</Button>\r\n            </div>\r\n            </ListGroupItem>\r\n            )\r\n            })}\r\n            \r\n            \r\n            \r\n        </ListGroup>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Heading} from './Heading';\r\nimport { BrandList } from './BrandList';\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div>\r\n            <Heading/>\r\n            <BrandList/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport {useMutation} from '@apollo/client';\r\nimport {ADD_BRAND } from \"../GraphQL/Mutations\";\r\n\r\nexport const AddBrand = () => {\r\n    const [name,setName] = useState(\"\");\r\n    const [website,setWebsite] = useState(\"\");\r\n    const [addNewBrand, {error}] = useMutation(ADD_BRAND)\r\n\r\n    const createBrand = () =>{\r\n        addNewBrand({\r\n            variables:{\r\n                name: name,\r\n                website_url: website\r\n            }\r\n        })\r\n    }\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <FormGroup>\r\n                <Label> Name</Label>\r\n                <Input type=\"text\" placeholder=\"Enter Name\" onChange={(e) => {\r\n                    setName(e.target.value);\r\n                }}></Input>\r\n                <Input type=\"text\" placeholder=\"Enter Website Url\" onChange={(e) => {\r\n                    setWebsite(e.target.value);\r\n                }}></Input>\r\n            </FormGroup>\r\n            <Button type=\"submit\" onClick={createBrand}>Submit</Button>\r\n            <Link to=\"/\" className=\"btn btn-danger ml-2\" >Cancel</Link>\r\n        </Form>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport {useMutation} from '@apollo/client';\r\nimport {EDIT_BRAND } from \"../GraphQL/Mutations\";\r\n\r\n\r\nexport const EditBrand = (props) => {\r\n    const currentId = props.match.params.id;\r\n\r\n    const [name,setName] = useState(\"\");\r\n    const [website,setWebsite] = useState(\"\");\r\n    const [editBrand, {error}] = useMutation(EDIT_BRAND)\r\n\r\n    const updateBrand = () =>{\r\n        editBrand({\r\n            variables:{\r\n                name: name,\r\n                website_url: website,\r\n                id: currentId\r\n            }\r\n        })\r\n    }\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n\r\n\r\n    return (\r\n        <Form>\r\n        <FormGroup>\r\n                <Label> Name</Label>\r\n                <Input type=\"text\" placeholder=\"Enter Name\" onChange={(e) => {\r\n                    setName(e.target.value);\r\n                }}></Input>\r\n                <Input type=\"text\" placeholder=\"Enter Website Url\" onChange={(e) => {\r\n                    setWebsite(e.target.value);\r\n                }}></Input>\r\n            </FormGroup>\r\n        <Button type=\"submit\" onClick={updateBrand}>Update</Button>\r\n        <Link to=\"/\" className=\"btn btn-danger ml-2\" >Cancel</Link>\r\n    </Form>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Home} from './Components/Home';\nimport {AddBrand} from './Components/AddBrand';\nimport {EditBrand} from './Components/EditBrand';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if(graphqlErrors) {\n    graphqlErrors.map(({message,location,path}) =>{\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"https://lively-darkness.eu-central-1.aws.cloud.dgraph.io/graphql\"}),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div style={{maxWidth:\"30rem\", margin:\"4rem auto\"}}>\n        <Router>\n          <Switch>\n            <Route exact  path=\"/\" component={Home} />\n            <Route path=\"/AddBrand\" component={AddBrand} />\n            <Route path=\"/edit/:id\" component={EditBrand} />\n          </Switch>\n        </Router>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}